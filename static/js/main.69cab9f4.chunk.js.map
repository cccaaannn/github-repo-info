{"version":3,"sources":["components/Header.tsx","components/About.tsx","components/Footer.tsx","components/Styled/SearchRepoStyles.tsx","components/SearchRepo.tsx","components/InfoItem.tsx","components/RepoInfo.tsx","statics/URLS.ts","components/OwnerInfo.tsx","components/InfoArea.tsx","components/Styled/AppStyles.tsx","components/Styled/GlobalStyles.tsx","statics/TEXTS.ts","types/emptyObjects.ts","hooks/useRepoFetch.tsx","hooks/usePaths.tsx","App.tsx","index.tsx"],"names":["HeaderStyle","styled","div","Header","props","title","AboutStyle","About","aboutText","LinkStyle","Link","Footer","location","useLocation","pathname","aboutPath","to","rootPath","className","FormControlStyle","FormStyle","form","ButtonStyle","input","SearchRepo","useState","repoOwner","setRepoOwner","repoName","setRepoName","onSubmit","e","preventDefault","onSearch","alert","type","placeholder","value","onChange","target","InfoItemStyle","InfoItem","info","infoDescription","RepoInfoStyle","TableStyle","table","RepoInfo","size","prettifyDate","dateISO","Date","parse","toLocaleString","rel","href","repoInfo","html_url","name","description","language","license","key","parseInt","toFixed","subscribers_count","watchers_count","forks_count","open_issues_count","created_at","updated_at","placeHolderImageURL","repoBaseAPI","userBaseAPI","OwnerInfoStyle","OwnerInfo","ownerInfo","id","src","avatar_url","alt","width","height","login","followers","following","userNotFound","InfoAreaStyle","InfoAreaErrorStyle","InfoArea","repoNotFound","ContainerStyle","GlobalStyles","createGlobalStyle","staticTexts","emptyOwnerInfo","emptyRepoInfo","useRepoFetch","setRepoInfo","setOwnerInfo","fetchRepo","a","fetch","res","json","repoData","fetchOwner","ownerData","usePaths","App","paths","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69cab9f4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n    return (\r\n        <HeaderStyle>\r\n            <h1>{props.title}</h1>\r\n            <hr />\r\n        </HeaderStyle>\r\n    )\r\n}\r\n\r\nconst HeaderStyle = styled.div`\r\n\tmargin-bottom: 1em;\r\n\r\n    hr {\r\n\t    margin-top: 1em;\r\n\t    border-color: #00ffcd;\r\n    }\r\n`;\r\n\r\nexport default Header\r\n","import styled from 'styled-components';\r\n\r\n\r\ntype Props = {\r\n    aboutText: string\r\n}\r\n\r\nconst About = (props: Props) => {\r\n    return (\r\n        <AboutStyle>\r\n            <p>{props.aboutText}</p>\r\n        </AboutStyle>\r\n    )\r\n}\r\n\r\nconst AboutStyle = styled.div`\r\n\tbackground: #0a2247;\r\n\tpadding: 1em;\r\n\tborder-radius: 15px;\r\n\ttext-align: center;\r\n`;\r\n\r\nexport default About\r\n","import { useLocation, Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\ntype Props = {\r\n    rootPath: string,\r\n    aboutPath: string\r\n}\r\n\r\nconst Footer = (props: Props) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n\r\n            {location.pathname === props.aboutPath\r\n            ? \r\n            <LinkStyle to={props.rootPath} className=\"link\">Back</LinkStyle>\r\n            :\r\n            <LinkStyle to={props.aboutPath} className=\"link\">About</LinkStyle>\r\n            }\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nconst LinkStyle = styled(Link)`\r\n    color: #00ffcd;\r\n`;\r\n\r\nexport default Footer\r\n","import styled from 'styled-components';\r\n\r\nexport const FormControlStyle = styled.div`\r\n\r\n\tflex: 1;\r\n  \tmargin: 20px 0;\r\n\tmargin-right: 3em;\r\n\r\n    label {\r\n        display: block;\r\n        margin-left: 0.3em;\r\n    }\r\n\r\n    input {\r\n        width: 100%;\r\n        height: 2em;\r\n\r\n        margin-top: 0.5em;\r\n        padding-left: 1em;\r\n        padding-right: 1em;\r\n\r\n        font-size: 15px;\r\n        border-radius: 15px;\r\n    }\r\n\r\n    input:focus {\r\n        box-shadow: 0px 0px 1px 2px #00ffcd;\r\n        outline: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const FormStyle = styled.form`\r\n    display: flex;\r\n\talign-items: center;\r\n  \tmargin-bottom: 1em;\r\n`;\r\n\r\nexport const ButtonStyle = styled.input`\r\n\tbackground: inherit;\r\n\tcolor: inherit;\r\n\tborder: 2px solid white;\r\n\tfont-size: 15px;\r\n\tborder-radius: 15px;\r\n\r\n\tpadding: 0.5em;\r\n\tmargin-top: 1.5em;\r\n\r\n\tcursor: pointer;\r\n\r\n    &:focus {\r\n  \t    outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: #00ffcd;\r\n        border-color: #00ffcd;\r\n    }\r\n\r\n    &:active {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\n","import { useState } from 'react';\r\n\r\nimport { FormStyle, FormControlStyle, ButtonStyle } from './Styled/SearchRepoStyles';\r\n\r\n\r\ntype Props = {\r\n    onSearch: (repoOwner: string, repoName: string) => void;\r\n}\r\n\r\nconst SearchRepo = (props: Props) => {\r\n    const [repoOwner, setRepoOwner] = useState('');\r\n    const [repoName, setRepoName] = useState('');\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if(!repoOwner) {\r\n            alert('Please enter repo owner');\r\n            return\r\n        }\r\n\r\n        if(!repoName) {\r\n            alert('Please enter repo name');\r\n            return\r\n        }\r\n\r\n        props.onSearch(repoOwner, repoName)\r\n    }\r\n\r\n    return (\r\n        <FormStyle onSubmit={onSubmit}>\r\n            <FormControlStyle>\r\n                <label>Repo owner</label>\r\n                <input type='text' placeholder='Repo owner' value={repoOwner} onChange={(e) => setRepoOwner(e.target.value)}/>\r\n            </FormControlStyle>\r\n            <FormControlStyle>\r\n                <label>Repo name</label>\r\n                <input type='text' placeholder='Repo name' value={repoName} onChange={(e) => setRepoName(e.target.value)}/>\r\n            </FormControlStyle>\r\n            <ButtonStyle type='submit' value='Search Repo' />\r\n        </FormStyle>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchRepo;\r\n","import styled from 'styled-components';\r\n\r\n\r\ntype Props = {\r\n    info: string,\r\n    infoDescription: string\r\n}\r\n\r\nconst InfoItem = (props: Props) => {\r\n    return (\r\n        <InfoItemStyle>\r\n            <h3>{props.info}</h3>\r\n            <p>{props.infoDescription}</p>\r\n        </InfoItemStyle>\r\n    )\r\n}\r\n\r\nconst InfoItemStyle = styled.div`\r\n\r\n\tflex: 1;\r\n\tpadding: 0.7em;\r\n\tmargin-left: 0.5rem;\r\n\tmargin-right: 0.5rem;\r\n\tmargin-bottom: 0.5em;\r\n\r\n\tbackground: #051835;\r\n\tborder-radius: 15px;\r\n\tcolor: #00ffcd;\r\n\ttext-align: center;\r\n\r\n    p{\r\n        color: #ffff;\r\n        font-size: 12px;\r\n        font-weight: normal;\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport default InfoItem\r\n","import InfoItem from './InfoItem';\r\nimport styled from 'styled-components';\r\n\r\n// types\r\nimport { IRepoInfo } from '../types/types';\r\n\r\ntype Props = {\r\n    repoInfo: IRepoInfo\r\n}\r\n\r\nconst RepoInfo = (props: Props) => {\r\n\r\n    const prettifySize = (size: number): string => {\r\n        if(size < 1000){\r\n            return size.toFixed(2) + \" KB\";\r\n        }\r\n        else if(size > 1000 && size < 1000000){\r\n            return (size / 1000).toFixed(2) + \" MB\";\r\n        }\r\n        else{\r\n            return (size / 1000000).toFixed(2) + \" GB\";\r\n        }\r\n    }\r\n\r\n    const prettifyDate = (dateISO: string): string => {\r\n        let d = new Date(Date.parse(dateISO));\r\n        // return d.toLocaleString(\"tr\");\r\n        return d.toLocaleString();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <RepoInfoStyle>\r\n                <div>\r\n                    <a target=\"_blank\" rel=\"noreferrer\" href={props.repoInfo.html_url ? props.repoInfo.html_url : \"https://github.com\"}><h2>{props.repoInfo.name ? props.repoInfo.name : \"-\"}</h2></a>\r\n                    <div>\r\n                        <p>{props.repoInfo.description ? props.repoInfo.description : \"\"}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <TableStyle>\r\n                    <tr>\r\n                        <th><InfoItem infoDescription={\"Language\"} info={props.repoInfo.language ? props.repoInfo.language : \"-\"}/></th>\r\n                        <th><InfoItem infoDescription={\"License\"} info={props.repoInfo.license ? props.repoInfo.license.key : \"-\"}/></th>                            \r\n                        <th><InfoItem infoDescription={\"Size\"} info={props.repoInfo.size ? prettifySize(parseInt(props.repoInfo.size)) : \"-\"}/></th>\r\n                    </tr>\r\n                </TableStyle>\r\n\r\n                <TableStyle>\r\n                    <tr>\r\n                        <th><InfoItem infoDescription={\"Subscribers\"} info={props.repoInfo.subscribers_count ? props.repoInfo.subscribers_count : \"-\"}/></th>\r\n                        <th><InfoItem infoDescription={\"Watchers\"} info={props.repoInfo.watchers_count ? props.repoInfo.watchers_count : \"-\"}/></th>                                    \r\n                        <th><InfoItem infoDescription={\"Forks\"} info={props.repoInfo.forks_count ? props.repoInfo.forks_count : \"-\"}/></th>                            \r\n                        <th><InfoItem infoDescription={\"Open issues\"} info={props.repoInfo.open_issues_count ? props.repoInfo.open_issues_count : \"-\"}/></th>\r\n                    </tr>\r\n                </TableStyle>\r\n\r\n                <TableStyle>\r\n                    <tr>\r\n                        <td><InfoItem infoDescription={\"Created\"} info={props.repoInfo.created_at ? prettifyDate(props.repoInfo.created_at) : \"-\"}/></td>\r\n                        <td><InfoItem infoDescription={\"Updated\"} info={props.repoInfo.updated_at ? prettifyDate(props.repoInfo.updated_at) : \"-\"}/></td>\r\n                    </tr>\r\n                </TableStyle>\r\n            </RepoInfoStyle>\r\n        </>\r\n    )\r\n}\r\n\r\nconst RepoInfoStyle = styled.div`\r\n\tmargin-left: 0.5em;\r\n\tmargin-bottom: 0.5em;\r\n\r\n    div h2{\r\n        margin-bottom: 0.5em;\r\n        margin-left: 0.5em;\r\n        display: inline-block;\r\n    }\r\n\r\n    div div p{\r\n        margin-bottom: 0.5em;\r\n        margin-left: 1em;\r\n    }\r\n`;\r\n\r\nconst TableStyle = styled.table`\r\n\ttable-layout: fixed;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport default RepoInfo\r\n","export const placeHolderImageURL = \"https://github.com/github.png\";\r\n\r\nexport const repoBaseAPI = \"https://api.github.com/repos/\";\r\nexport const userBaseAPI = \"https://api.github.com/users/\";","// inner components\r\nimport InfoItem from './InfoItem';\r\n\r\n// styled components\r\nimport styled from 'styled-components';\r\n\r\n// statics\r\nimport { placeHolderImageURL } from '../statics/URLS';\r\n\r\n// types\r\nimport { IOwnerInfo } from '../types/types';\r\n\r\ntype Props = {\r\n    userNotFound: string,\r\n    ownerInfo: IOwnerInfo\r\n}\r\n\r\nconst OwnerInfo = (props: Props) => {\r\n    return (\r\n        <>\r\n            {\r\n                props.ownerInfo.id\r\n                ?\r\n                    <OwnerInfoStyle>\r\n                        <img src={props.ownerInfo.avatar_url ? props.ownerInfo.avatar_url : placeHolderImageURL} alt=\"avatar\" width=\"100\" height=\"100\"></img>\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={props.ownerInfo.html_url ? props.ownerInfo.html_url : \"https://github.com\"}><h2>{props.ownerInfo.login ? props.ownerInfo.login : \"-\"}</h2></a>\r\n                        \r\n                        <InfoItem infoDescription={\"Followers\"} info={props.ownerInfo.followers ? props.ownerInfo.followers : \"-\"}/>\r\n                        <InfoItem infoDescription={\"Following\"} info={props.ownerInfo.following ? props.ownerInfo.following : \"-\"}/>\r\n                    </OwnerInfoStyle>\r\n                :\r\n                    <OwnerInfoStyle>\r\n                        <img src={placeHolderImageURL} alt=\"avatar\" width=\"100\" height=\"100\"></img>\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com\"><h2>{props.userNotFound}</h2></a>\r\n                    </OwnerInfoStyle>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst OwnerInfoStyle = styled.div`\r\n\ttext-align: center;\r\n\r\n    h2{\r\n        margin-bottom: 0.5em;\r\n    }\r\n`;\r\n\r\nexport default OwnerInfo\r\n","// inner components\r\nimport RepoInfo from './RepoInfo';\r\nimport OwnerInfo from './OwnerInfo';\r\n\r\n// styled components\r\nimport styled from 'styled-components';\r\n\r\n// types\r\nimport { IOwnerInfo, IRepoInfo } from '../types/types';\r\n\r\ntype Props = {\r\n    userNotFound: string,\r\n    repoNotFound: string,\r\n\r\n    ownerInfo: IOwnerInfo,\r\n    repoInfo: IRepoInfo\r\n}\r\n\r\nconst InfoArea = (props: Props) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.repoInfo.id\r\n                ?\r\n                    <InfoAreaStyle>\r\n                        <OwnerInfo ownerInfo={props.ownerInfo} userNotFound={props.userNotFound}/>\r\n                        <RepoInfo repoInfo={props.repoInfo}/>\r\n                    </InfoAreaStyle>\r\n                :\r\n                    <InfoAreaErrorStyle>\r\n                        <h3>{props.repoNotFound}</h3>\r\n                    </InfoAreaErrorStyle>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst InfoAreaStyle = styled.div`\r\n\tdisplay: flex;\r\n\tbackground: #0a2247;\r\n\tpadding: 1em;\r\n\tborder-radius: 15px;\r\n`;\r\n\r\nconst InfoAreaErrorStyle = styled.div`\r\n\ttext-align: center;\r\n\tbackground: #0a2247;\r\n\tpadding: 1em;\r\n\tborder-radius: 15px;\r\n`;\r\n\r\nexport default InfoArea;","import styled from 'styled-components';\r\n\r\nconst ContainerStyle = styled.div`\r\n    max-width: 50%;\r\n    margin: 30px auto;\r\n    border: 2px solid #00ffcd;\r\n    padding: 30px;\r\n    border-radius: 15px;\r\n`;\r\n\r\nexport default ContainerStyle;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        background-color: #092a5c;\r\n        color: #ffff;\r\n    }\r\n\r\n    a {\r\n        color: #00ffcc;\r\n        text-decoration: none;\r\n    }\r\n\r\n    img {\r\n        border-radius: 50%;\r\n    }\r\n\r\n    footer {\r\n        margin-top: 30px;\r\n        text-align: center\r\n    }\r\n`;\r\n \r\nexport default GlobalStyles;","export const staticTexts = {\r\n    title : \"GitHub repo info\",\r\n    aboutText : \"This project is for getting information for a GitHub repository.\",\r\n    repoNotFound : \"No Repo Found\",\r\n    userNotFound: \"User not found\"\r\n}","import { IOwnerInfo, IRepoInfo } from './types';\r\n\r\n// empty versions for defining useEffect\r\nexport const emptyOwnerInfo: IOwnerInfo = {\r\n    id: \"\",\r\n    avatar_url: \"\",\r\n    html_url: \"\",\r\n    login: \"\",\r\n    followers: \"\",\r\n    following: \"\"\r\n}\r\n\r\nexport const emptyRepoInfo: IRepoInfo = {\r\n    id: \"\",\r\n    html_url: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    language: \"\",\r\n    license: { key: \"\" },\r\n    size: \"\",\r\n    subscribers_count: \"\",\r\n    watchers_count: \"\",\r\n    forks_count: \"\",\r\n    open_issues_count: \"\",\r\n    created_at: \"\",\r\n    updated_at: \"\"\r\n}\r\n","// react\r\nimport { useState } from \"react\";\r\n\r\n// statics\r\nimport { repoBaseAPI, userBaseAPI } from \"../statics/URLS\";\r\n\r\n// types\r\nimport { IOwnerInfo, IRepoInfo } from '../types/types';\r\nimport { emptyOwnerInfo, emptyRepoInfo } from '../types/emptyObjects';\r\n\r\n\r\nconst useRepoFetch = () => {\r\n\r\n\tconst [repoInfo, setRepoInfo] = useState<IRepoInfo>(emptyRepoInfo);\r\n\tconst [ownerInfo, setOwnerInfo] = useState<IOwnerInfo>(emptyOwnerInfo);\r\n\r\n    async function fetchRepo(repoOwner: string, repoName: string) {\r\n        const res = await fetch(`${repoBaseAPI}${repoOwner}/${repoName}`);\r\n        const repoData = await res.json();\r\n        setRepoInfo(repoData)\r\n    }\r\n\r\n\tasync function fetchOwner(repoOwner: string) {\r\n        const res = await fetch(`${userBaseAPI}${repoOwner}`);\r\n        const ownerData = await res.json();\r\n        setOwnerInfo(ownerData)\r\n    }\r\n\r\n\tasync function onSearch(repoOwner: string, repoName: string) {\r\n\t    await fetchRepo(repoOwner, repoName);\r\n\t\tawait fetchOwner(repoOwner);\r\n\t}\r\n\r\n    return [repoInfo, setRepoInfo, ownerInfo, setOwnerInfo, onSearch] as const;\r\n}\r\n\r\nexport default useRepoFetch;","const usePaths = () => {\r\n    // this app is deployed to github pages, so on production paths should start with repo name\r\n\r\n    const paths = {\r\n        \"rootPath\" : process.env.NODE_ENV === 'production' ? \"/github-repo-info\" : \"/\",\r\n        \"aboutPath\" : process.env.NODE_ENV === 'production' ? \"/github-repo-info/about\" : \"/about\"\r\n    }\r\n\r\n    return [paths] as const;\r\n}\r\n\r\nexport default usePaths;","// inner components\nimport Header from './components/Header';\nimport About from './components/About';\nimport Footer from './components/Footer';\n\nimport SearchRepo from './components/SearchRepo';\nimport InfoArea from './components/InfoArea';\n\n// react router\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// styled components\nimport ContainerStyle from './components/Styled/AppStyles';\nimport GlobalStyles from './components/Styled/GlobalStyles';\n\n// statics\nimport { staticTexts } from './statics/TEXTS';\n\n// hooks\nimport useRepoFetch from './hooks/useRepoFetch';\nimport usePaths from './hooks/usePaths';\n\n\nfunction App() {\n\n    // custom hook for fetching repo info\n    const [repoInfo, setRepoInfo, ownerInfo, setOwnerInfo, onSearch] = useRepoFetch();\n\n    // paths\n    const [paths] = usePaths();\n\n\treturn (\n        <Router>\n            <GlobalStyles />\n            <ContainerStyle>\n                <Header title={staticTexts.title}/>\n\n                <Route path={paths.rootPath} exact render={(props) => \n                (\n                    <>\n\t\t\t\t\t\t<SearchRepo onSearch={onSearch}/>\n\t\t\t\t\t\t<InfoArea repoInfo={repoInfo} ownerInfo={ownerInfo} repoNotFound={staticTexts.repoNotFound} userNotFound={staticTexts.userNotFound}/>\n                    </>\n                )} />\n\n                <Route path={paths.aboutPath} exact render={(props) => \n                (\n                    <>\n\t\t\t\t\t\t<About aboutText={staticTexts.aboutText}/>\n                    </>\n                )} />\n\n                <Footer rootPath={paths.rootPath} aboutPath={paths.aboutPath}/>\n            </ContainerStyle>\n        </Router>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}